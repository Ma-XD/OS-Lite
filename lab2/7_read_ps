#!/bin/bash

stats_b="stats_b.txt"
stats_a="stats_a.txt"

touch $stats_b
touch $stats_a


function getStats {
for pid in $(ls /proc | grep -o "[0-9]\+")
do
  
  read=$(sudo cat /proc/$pid/io 2> /dev/null | grep -E "read_bytes: [0-9]+" | grep -o "[0-9]\+")
  cmnd=$(cat /proc/$pid/cmdline 2> /dev/null | tr -d '\0')
   
  if [[ "$read" != "" && "$cmnd" != "" ]]
  then
     echo "pid=$pid:$read:$cmnd" >> $1
  fi
done
}

getStats $stats_b
echo sleeping...zzzzzzz
sleep 1m
echo wake up!
getStats $stats_a

output="out.txt"
touch $output

while read line 
do
  pid_b=$(echo $line | awk -F: '{print $1}' | grep -o "[0-9]\+")
  line_a=$(cat $stats_a | grep -E "pid=$pid_b:")

  if [[ "$line_a" != "" ]]
  then
    read_b=$(echo $line | awk -F: '{print $2}')
    read_a=$(echo $line_a | awk -F: '{print $2}')
    cmnd=$(echo $line | awk -F: '{print $3}')
    let d_read=read_a-read_b
    
    if [ "$d_read" -gt 0 ]
    then
       echo $pid_b":"$d_read":"$cmnd >> $output
    fi
  fi
done < $stats_b

cat $output | sort -t":" -nk2 | tail -3 | awk -F: '{print $1":"$3":"$2}'


rm stats_a.txt stats_b.txt output.txt
